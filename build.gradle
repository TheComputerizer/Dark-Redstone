//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'net.minecraftforge.gradle' version '5.1+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

fancyGradle {
    patches {
        resources
        coremods
        asm
        mergetool
    }
}

version = '1.12.2-1.1'
group = 'mods.thecomputerizer.darkredstone'
archivesBaseName = 'darkredstone'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    runs {
        def args = [
                "-Dmixin.debug.export=true",
                '-Dmixin.hotSwap=true',
                '-Dmixin.checks.interfaces=true'
        ]
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            jvmArgs args
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            jvmArgs args
        }
    }
}

sourceSets {
    main {
        ext.refMap = 'darkredstone.refmap.json'
    }
}

repositories {
    maven {
        url = uri("https://www.cursemaven.com")
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Sponge"
        url = uri("https://repo.spongepowered.org/maven")
    }
}

dependencies {
    //minecraft
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    //required mod dependencies
    implementation fg.deobf('curse.maven:mixin-booter-419286:4090558')

    //mixin annotation processor
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.12.2'
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': '1.12.2'
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, 'darkredstone.refmap.json'
}

jar {
    manifest {
        attributes([
                'FMLAT': 'accesstransformer.cfg',
                'FMLCorePlugin': 'mods.thecomputerizer.darkredstone.core.EarlyMixinPlugin',
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'true'
        ])
    }
}